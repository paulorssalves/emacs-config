#!/bin/bash

REPODIR=..
EMACSDIR=/home/$USER/.emacs.d/

FILES=( ${REPODIR}/config/config.org
	${REPODIR}/config/org-agenda-config.org
	${REPODIR}/abbrev_defs ) 

bold=$(tput bold)
normal=$(tput sgr0)

for item in ${FILES[@]}; do

    # para a leitura
    REMOTEFILE=$item
    BASEFILE=$(basename $item)

    if [[ "$item" == *"config"* ]]; then
	LOCALFILE_L=${EMACSDIR}config/$(basename $item)

	diff -s --color=always $LOCALFILE_L $REMOTEFILE
	printf "Lembrete: Linhas iniciando com '<' vem de $REMOTEFILE (remoto)\nao passo em que as inicam com '>' vem de $LOCALFILE_L (local)"

	while true; do
	    echo "Atualizar o $BASEFILE ${bold}local${normal} ou o ${bold}remoto${normal} (deste repositório)?" 
	    read -p "[L=local/R=remoto/P=pular/C=cancelar]: " ANSWER 
	    ANSWER_S=${ANSWER:0:1}

	    case $( echo $ANSWER_S | awk '{print tolower($0)}' ) in 

		"r" )
		    printf "atualizando $BASEFILE deste repositório...\n\n"; 
		    cp --verbose $LOCALFILE_L $REMOTEFILE # update remote
		    break ;;

		"l")
		    printf "atualizando $BASEFILE local...\n\n";  
		    cp --verbose $REMOTEFILE $LOCALFILE_L # update local 
		    break ;;

		"p")
		    printf "pulando este...\n\n"
		    break ;;

		"c")
		    printf "cancelando...\n\n" ; sleep 1
		    exit 1 ;;
		*)
		    printf "\n${bold}Não é uma resposta válida.${normal}\n" 
		    continue ;;
	    esac
	done
    else
	LOCALFILE_L=${EMACSDIR}$(basename $item)
	diff -s --color=always $LOCALFILE_L $REMOTEFILE

	while true ; do
	    echo "Atualizar o $BASEFILE ${bold}local${normal} ou o ${bold}remoto${normal} (deste repositório)?" 
	    read -p "[L=local/R=remoto/P=pular/Outro=cancelar]: " ANSWER 
	    ANSWER_S=${ANSWER:0:1}

	    case $( echo $ANSWER_S | awk '{print tolower($0)}' ) in 
		"r")
		    printf "atualizando $BASEFILE deste repositório...\n"; 
		    cp --verbose $LOCALFILE_L $REMOTEFILE # update remote
		    break ;;

		"l")
		    printf "atualizando $BASEFILE local...\n";
		    cp --verbose $REMOTEFILE $LOCALFILE_L # update local 
		    break ;;

		"p")
		    printf "pulando este...\n"
		    break ;;

		"c")
		    printf "cancelando...\n" ; sleep 1
		    exit 1 ;;

		*)
		    printf "\n${bold}Não é uma resposta válida.${normal}\n" 
		    continue ;;
	    esac 
	done
    fi
done

echo "Terminado..." ; sleep 1
